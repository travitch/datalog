name:                datalog
version:             1.0
synopsis:            An implementation of datalog in Haskell
license:             BSD3
license-file:        LICENSE
author:              Tristan Ravitch
maintainer:          tristan@ravit.ch
category:            Database
build-type:          Simple
cabal-version:       >=1.10
tested-with: GHC == 8.0.2, GHC == 8.2.2, GHC == 8.4.4, GHC == 8.6.3
description: This is an implementation of datalog in pure Haskell.
             It is implemented as a library and can be used from within
             any Haskell application.  As a consequence, it supports both
             standard Datalog operations and arbitrary predicates written
             in Haskell.

extra-source-files: CHANGES.md

library
  default-language: Haskell2010
  exposed-modules: Database.Datalog
  other-modules:   Database.Datalog.Adornment
                   Database.Datalog.Database
                   Database.Datalog.Errors
                   Database.Datalog.Evaluate
                   Database.Datalog.MagicSets
                   Database.Datalog.Panic
                   Database.Datalog.RelationSchema
                   Database.Datalog.Rules
                   Database.Datalog.Stratification
                   Database.Datalog.Tuple
  build-depends: base == 4.*,
                 primitive >= 0.5 && < 0.8,
                 containers,
                 unordered-containers,
                 hashable,
                 exceptions >= 0.5 && < 0.11,
                 panic >= 0.4 && < 0.5,
                 text >= 1 && < 2,
                 mtl >= 2 && < 3,
                 vector >= 0.9 && < 0.13,
                 parameterized-utils
  hs-source-dirs: src
  ghc-options: -Wall -Wcompat

executable datalog-repl
  default-language: Haskell2010
  main-is: Main.hs
  other-modules: Parser, Commands
  hs-source-dirs: tools/repl
  ghc-options: -Wall
  build-depends: base,
                 datalog,
                 containers,
                 exceptions,
                 hashable,
                 haskeline,
                 parsec,
                 pretty,
                 text,
                 transformers,
                 unordered-containers,
                 vector

test-suite NQueensTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: NQueens.hs
  ghc-options: -Wall -rtsopts
  build-depends: datalog,
                 base,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite AncestorTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: AncestorTest.hs
  ghc-options: -Wall
  build-depends: datalog,
                 base,
                 text,
                 containers,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite WorksForTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: WorksForTest.hs
  ghc-options: -Wall
  build-depends: datalog,
                 base,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

source-repository head
  type: git
  location: git://github.com/travitch/datalog.git
